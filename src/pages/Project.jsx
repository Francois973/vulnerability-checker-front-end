import { useState } from "react";
import { useEffect } from "react";
import { NavLink, useLocation, useParams } from "react-router-dom";
import useProjectChannel from "../hook/useProjectChannel";
import Logo from "../components/Logo";
import Banner from "../components/Banner";
import Ecosystem from "../components/Ecosystem";
import Modal from "../components/Modal";

// Better way to reduce bundle size

function Project() {
  const [project, setProject] = useState();
  const [ecosystems, setEcosystems] = useState({});
  const [vulnerabilities, setVulnerabilities] = useState([]);
  const [loading, setLoading] = useState(false);
  const { uuid } = useParams();
  const [showModal, setShowModal] = useState(false);

  const handleClose = () => setShowModal(false);

  useProjectChannel({
    uuid,
    setVulnerabilities,
    setEcosystems,
    setProject,
  });

  useEffect(() => {
    if (uuid && !project && !loading) {
      const fetchProject = async () => {
        const response = await fetch(
          `http://localhost:3000/api/v1/projects/${uuid}`
        );
        const project = await response.json();
        setProject(project);
        setVulnerabilities(project.vulnerabilities);
        setEcosystems(project.ecosystems);
      };

      fetchProject();
    }
  }, [uuid, project, loading]);

  console.log(vulnerabilities);
  if (!project) {
    return <p>Loading....</p>;
  }

  return (
    <div className="min-h-screen">
      <Logo />
      <div className="flex flex-col gap-y-14 items-center">
        <Banner />
        <div className="pr-4 pl-4 pt-3 pb-3 bg-dark-color w-1/4 text-center rounded-md mb-11">
          {project.status === "completed" ? (
            <div className="flex flex-row justify-center gap-x-3">
              <p>Status</p>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth={1.5}
                stroke="currentColor"
                className="w-6 h-6"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M4.5 12.75l6 6 9-13.5"
                />
              </svg>
            </div>
          ) : (
            <p>Status: New</p>
          )}
        </div>
      </div>
      <div className="flex flex-col justify-left gap-y-4 ml-20 ">
        <NavLink
          to="/"
          className="bg-green-color p-2 w-24 text-center rounded-md hover:bg-green-900 transition ease-in-out delay-50"
        >
          Home
        </NavLink>
        <span className="text-2xl font-bold">
          There are {vulnerabilities.length} vulnerabilities
          <br /> in you repository
        </span>
      </div>
      {Object.entries(ecosystems).map(([ecosystem, status]) => {
        return (
          <div key={ecosystem}>
            <div className="flex flex-row">
              <Ecosystem name={ecosystem} status={status} />
            </div>
            <div className="w-1/2 m-auto">
              <ul>
                {vulnerabilities
                  .filter((v) => v.ecosystem === ecosystem)
                  .map((v, i) => (
                    <li
                      key={i}
                      className="p-3 bg-dark-color mb-5 rounded-md min-h-9 flex flex-col gap-y-2 "
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        strokeWidth={1.5}
                        stroke="currentColor"
                        className="w-6 h-6"
                      >
                        <path
                          strokeLinecap="round"
                          strokeLinejoin="round"
                          d="M12.75 19.5v-.75a7.5 7.5 0 00-7.5-7.5H4.5m0-6.75h.75c7.87 0 14.25 6.38 14.25 14.25v.75M6 18.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"
                        />
                      </svg>
                      <strong>{v.stack}</strong> {v.summary} (
                      {v.github_version_ranges}) {v.severity}
                      <span>{v.ghsaId}</span>
                      <Modal vulnerabilities={v.details} />
                    </li>
                  ))}
              </ul>
            </div>
          </div>
        );
      })}
    </div>
  );
}

export default Project;
