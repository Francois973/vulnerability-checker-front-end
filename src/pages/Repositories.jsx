import React from "react";
import { useState } from "react";
import { useEffect } from "react";
import { useContext } from "react";
import LanguagesRepos from "../components/LanguagesRepos";
import MyContext from "../contexts/MyContext";

const Repositories = () => {
  const { formData } = useContext(MyContext);
  const [error, setError] = useState(null);
  const [repositories, setRepositories] = useState();

  useEffect(() => {
    try {
      setRepositories(formData);
      if (Object.entries(formData).length === 0) {
        throw new Error("Sorry... This username is maybe unknown");
      }
    } catch (error) {
      setError(error.message);
    }
  }, []);

  return (
    <div className="flex flex-wrap gap-[4%] gap-y-10 h-auto mt-10 w-full space-between">
      {error && <div className="text-lg m-auto mt-10">{error}</div>}
      {repositories &&
        Object.entries(repositories).map(([key, value]) => (
          <div
            key={key}
            className="p-6 bg-dark-color w-[48%] rounded-md h-auto flex flex-col items-start justify-between"
          >
            <a
              className="text-sky-400 text-[24px] hover:text-sky-300 transition ease-in-out delay-50"
              href={value.url}
              target="_blank"
            >
              {value.name}
            </a>
            <li className="hidden md:contents grow">{value.url}</li>

            {value.owner ? (
              <div>
                <p>Username found</p>
                <a
                  className="text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600 text-[24px]  hover:opacity-[0.4] transition ease-in-out delay-50"
                  href={`https://github.com/${value.owner}?tab=repositories`}
                  target="_blank"
                >
                  {value.owner}
                </a>
              </div>
            ) : null}

            <LanguagesRepos languages={value.languages} />
          </div>
        ))}
    </div>
  );

  // return (
  //   <div className="flex flex-wrap gap-[4%] gap-y-10 h-auto mt-10 w-full space-between">
  //     {/* {error && <div className="text-lg m-auto mt-10">{error}</div>} */}
  //     {Object.entries(repositories).map(([key, value]) => (
  //       <div
  //         key={key}
  //         className="p-6 bg-dark-color w-[48%] rounded-md h-auto flex flex-col items-start justify-between"
  //       >
  //         <a
  //           className="text-sky-400 text-[24px] hover:text-sky-300 transition ease-in-out delay-50"
  //           href={value.name}
  //           target="_blank"
  //         >{`${value.owner}`}</a>
  //         {/* <li className="hidden md:contents grow">{`${value.html_url}`}</li> */}
  //         {/* <LanguagesRepos url={value.languages_url} url_post={value.html_url} /> */}
  //       </div>
  //     ))}
  //   </div>
  // );
};

export default Repositories;
