import { useEffect, useState } from "react";
import consumer from "../utils/consumer";

const useProjectChannel = ({
  uuid,
  setVulnerabilities,
  setEcosystems,
  setProject,
}) => {
  const [channel, setChannel] = useState();

  useEffect(() => {
    if (!uuid) return false;
    if (channel) return false;

    const newChannel = consumer.subscriptions.create(
      {
        channel: "ProjectChannel",
        uuid,
      },
      {
        received(data) {
          if (data.type === "vulnerability:found") {
            setVulnerabilities((vulnerabilities) => {
              const newVulnerabilities = vulnerabilities.filter(
                (v) => v.id !== data.payload.id
              );
              return [...newVulnerabilities, data.payload];
            });
          } else if (data.type === "ecosystem:update") {
            setEcosystems(data.payload);
          } else if (data.type === "project:completed") {
            setProject((project) => ({ ...project, status: "completed" }));
          }
        },
      }
    );
    setChannel(newChannel);

    return () => {
      newChannel.unsubscribe();
    };
  }, [uuid, setVulnerabilities]);

  return channel;
};

export default useProjectChannel;
