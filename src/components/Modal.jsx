import React, { useEffect } from "react";
import { useState, useRef } from "react";
import Cross from "./Cross";
import Severity from "./Severity";
import ReactMarkdown from "react-markdown";
import remarkGfm from "remark-gfm";

const Modal = ({ vulnerability }) => {
  const [showVulModal, setShowVulModal] = useState(false);

  if (!showVulModal) {
    return (
      <div className="modal">
        <button
          className="mt-5 w-auto rounded-md underline hover:no-underline"
          onClick={() => setShowVulModal(true)}
        >
          See more
        </button>
      </div>
    );
  }
  return (
    <div className="fixed inset-1 bg-black bg-opacity-10 backdrop-blur-sm flex flex-col justify-center overflow-hidden -my-1 sm:p-32 ease-out duration-300">
      <div className="bg-dark-color p-16 flex flex-col gap-y-10 items-left w-auto	overflow-auto rounded-lg z-20">
        <div
          onClick={() => setShowVulModal(false)}
          className="cursor-pointer flex flex-row justify-between"
        >
          <span className="text-3xl font-Open font-bold pt-1">Details</span>
          <Cross />
        </div>
        <p>
          <strong>Severity</strong> <br />
          <Severity severity={vulnerability.severity} />
        </p>
        <div className="flex flex-row justify-between">
          <span>
            <strong>
              Stack <br />
            </strong>
            {vulnerability.stack}
          </span>
          <span>
            <strong>CVSS</strong> <br /> {vulnerability.score_cvss}
          </span>
        </div>
        <p>
          <strong>Title</strong> <br />
          {vulnerability.summary}
        </p>
        <p>
          <strong>Details</strong> :
          <br />
          {/* {vulnerability.details} */}
          <ReactMarkdown
            children={vulnerability.details}
            remarkPlugins={[remarkGfm]}
            className="break-words"
          />
          ;
        </p>
      </div>
    </div>
  );
};

export default Modal;
