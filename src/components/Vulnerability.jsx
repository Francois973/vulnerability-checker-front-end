import React, { useState, useEffect } from "react";
import Severity from "./Severity";
import ReactMarkdown from "react-markdown";
import remarkGfm from "remark-gfm";

const Vulnerability = ({ vulnerability }) => {
  const [showVulModal, setShowVulModal] = useState(false);

  const handleOverlayClick = (event) => {
    if (event.target === event.currentTarget) {
      setShowVulModal(false);
    }
  };

  useEffect(() => {
    if (showVulModal) {
      document.body.classList.add("overflow-hidden");
    } else {
      document.body.classList.remove("overflow-hidden");
    }
  }, [showVulModal]);

  if (!showVulModal) {
    return (
      <div
        className="p-6 bg-dark-github rounded-sm sm:h-[25.685678073510772vh] h-auto flex flex-col justify-between gap-y-[-2] hover:scale-90 transition ease-in-out duration-300 cursor-pointer"
        onClick={() => setShowVulModal(true)}
      >
        <div className="flex flex-row justify-between">
          <strong>{vulnerability.stack}</strong>
          {vulnerability.ecosystem === "RUBYGEMS" ? (
            <img
              src="https://raw.githubusercontent.com/devicons/devicon/master/icons/ruby/ruby-original.svg"
              alt="ruby"
              className="h-6 w-6"
            />
          ) : vulnerability.ecosystem === "NPM" ? (
            <img
              src="https://www.svgrepo.com/show/355146/npm.svg"
              alt="npm"
              className="h-6 w-6"
            />
          ) : vulnerability.ecosystem === "ERLANG" ? (
            <img
              src="https://www.vectorlogo.zone/logos/elixir-lang/elixir-lang-icon.svg"
              alt="elixir"
              className="h-6 w-6"
            />
          ) : vulnerability.ecosystem === "RUST" ? (
            <img
              src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Rust_vector_logo.svg/2560px-Rust_vector_logo.svg.png"
              alt="rust"
              className="text-white h-3 w-17"
            />
          ) : vulnerability.ecosystem === "COMPOSER" ? (
            <img
              src="https://www.php.net//images/logos/new-php-logo.svg"
              alt="rust"
              className="text-white h-6 w-17"
            />
          ) : null}
        </div>
        {vulnerability.summary} ({vulnerability.github_version_ranges}){" "}
        <div className="flex flex-row justify-between">
          <p>
            <strong>Severity</strong> <br />
            <Severity severity={vulnerability.severity} />
          </p>
          {vulnerability.score_cvss === null ? null : (
            <p className="text-right">
              <strong>CVSS</strong> <br />
              <span>{vulnerability.score_cvss}</span>
            </p>
          )}
        </div>
      </div>
    );
  }

  return (
    <div
      className="fixed inset-1 bg-black bg-opacity-10 backdrop-blur-sm flex flex-col justify-center -my-1 sm:p-32 "
      onClick={handleOverlayClick}
    >
      <div className="bg-dark-github relative rounded-sm shadow dark:bg-dark-github p-0 md:p-10 w-3/4 md:w-1/2 m-auto overflow-x-hidden ease-out duration-500">
        <div className="flex items-start justify-between p-4 border-b rounded-t dark:border-gray-600">
          <h3 className="text-xl font-semibold text-gray-900 dark:text-white">
            {vulnerability.stack}
          </h3>
          <button
            type="button"
            className="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-600 dark:hover:text-white hover:rotate-45 transition ease-out"
            onClick={() => setShowVulModal(false)}
          >
            <svg
              class="w-5 h-5"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"></path>
            </svg>
          </button>
        </div>
        <div className="p-6 space-y-6">
          <div className="flex flex-col gap-y-2">
            <div class="text-base leading-relaxed text-gray-500 dark:text-gray-400">
              <strong>Severity</strong> <br />
              <Severity severity={vulnerability.severity} />
            </div>
            <div>
              <strong>CVSS</strong> <br /> {vulnerability.score_cvss}
            </div>
          </div>
          <p>
            <strong>Title</strong> <br />
            {vulnerability.summary}
          </p>
          <div className="w-full lg:w-full h-64 overflow-auto">
            <strong>Details</strong> :
            <br />
            {/* {vulnerability.details} */}
            <ReactMarkdown
              children={vulnerability.details}
              remarkPlugins={[remarkGfm]}
              className="break-words p-4"
            />
          </div>
        </div>
      </div>
    </div>
  );
};

export default Vulnerability;
